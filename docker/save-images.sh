#!/usr/bin/env bash
list="images.txt"
images="images.tar.gz"
repository=""

usage () {
    echo "USAGE: $0 [--image-list images.txt] [--images images.tar.gz]"
    echo "  [-l|--image-list path] text file with list of images; one image per line."
    echo "  [-i|--images path] tar.gz generated by docker save."
    echo "  [-r|--repository] re-tag images with repository."
    echo "  [-h|--help] Usage message"
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -i|--images)
        images="$2"
        shift # past argument
        shift # past value
        ;;
        -l|--image-list)
        list="$2"
        shift # past argument
        shift # past value
        ;;
        -r|-repository)
        repository="$2"
        shift
        shift
        ;;
        -h|--help)
        usage
        exit 0
        ;;
        *)
        usage
        exit 1
        ;;
    esac
done

pulled=""
while IFS= read -r i; do
    [ -z "${i}" ] && continue
    if docker pull "${i}" > /dev/null 2>&1; then
        echo "Image pull success: ${i}"
        if [ -z '${repository}' ]; then
            pulled="${pulled} ${i}"
        else
            NAMES=(${i//// })
            IMAGE_NAME=${NAMES[-1]}
            NEW_TAG="${repository}/${IMAGE_NAME}"
            if docker tag ${i} $NEW_TAG > /dev/null 2>&1; then
                pulled="${pulled} $NEW_TAG"
            else
                if docker inspect "$NEW_TAG" > /dev/null 2>&1; then
                    pulled="${pulled} $NEW_TAG"
                else 
                    echo "Image re-tag failed: $NEW_TAG"
                fi
            fi
        fi        
    else
        if docker inspect "${i}" > /dev/null 2>&1; then
            if [ -z '${repository}' ]; then
                pulled="${pulled} ${i}"
            else
                NAMES=(${i//// })
                IMAGE_NAME=${NAMES[-1]}
                NEW_TAG="${repository}/${IMAGE_NAME}"
                if docker tag ${i} $NEW_TAG > /dev/null 2>&1; then
                    pulled="${pulled} $NEW_TAG"
                else
                    if docker inspect "$NEW_TAG" > /dev/null 2>&1; then
                        pulled="${pulled} $NEW_TAG"
                    else 
                        echo "Image re-tag failed: $NEW_TAG"
                    fi
                fi
            fi
        else
            echo "Image pull failed: ${i}"
        fi
    fi
done < "${list}"

echo "Creating ${images} with $(echo ${pulled} | wc -w | tr -d '[:space:]') images"
docker save $(echo ${pulled}) | gzip --stdout > ${images}
